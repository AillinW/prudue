#作业要求
# 1. 请尝试用拟合回归的方法，预测2018年5.26日 的车牌价。
# 原始资料请见： http://jt.gz.bendibao.com/news/2015427/186209.shtml
# 2. 要求： 肯定不符合线性模式。其它模型需要大家自学一下sklearn。：）
# 3. 可以考虑分段，不一定要拟合所有数据
# 4. 请用matplotlib先画出自2012年8月到现在的价格变化趋势，拟合可以用大家想到的任何方法。但需要有分析。
# 5. 请分别预测个人最低成交价和个人平均成交价。
#2018/5/11
#author：Aillin_W


import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
import pandas as pd

# 导入数据
lowp_train=np.array([14500,16800,20200,26000,35000]).reshape(-1, 1)
lowp_text=np.array([18000,21000,22800,25300,32100])
aver_train=np.array([15436,17798,21506,27672,37804])
aver_text=np.array([34046,32312,25213,24560,26939,34455])
x=np.array([1,2,3,4,5]).reshape(-1, 1)
x1=np.array([0,1,2,3,4]).reshape(-1, 1)
poly2 = PolynomialFeatures(degree=2)    # 2次多项式特征生成器
x_train_poly2 = poly2.fit_transform(x)
x1_train_poly2 = poly2.fit_transform(x1)
# 建立模型预测
regressor_poly2 = LinearRegression()
regressor_poly2.fit(x_train_poly2, lowp_train)
xx=np.linspace(1, 6, 6)
xx = xx.reshape(xx.shape[0], 1)
xx_poly2 = poly2.transform(xx)
yy_poly2 = regressor_poly2.predict(xx_poly2)
plt2, = plt.plot(xx, yy_poly2,"b-",label='train')
regressor_poly2.fit(x1_train_poly2, lowp_text)
plt.figure(1)
yy_poly2 = regressor_poly2.predict(xx_poly2)
plt.scatter(x,lowp_train)
plt2, = plt.plot(xx, yy_poly2,"r-",label='text')
print(yy_poly2)
plt.scatter(x1,lowp_text)
plt.title("Minimum price prediction")
plt.legend(loc='upper left')
plt.show()

x1=np.array(np.linspace(1,6,6)).reshape(-1, 1)
x1_train_poly2 = poly2.fit_transform(x1)

poly2 = PolynomialFeatures(degree=2)
regressor_poly2 = LinearRegression()
x_train_poly2 = poly2.fit_transform(x)
x1_train_poly2 = poly2.fit_transform(x1)
# xx=np.linspace(1, 6,)
# xx = xx.reshape(xx.shape[0], 1)
regressor_poly2.fit(x_train_poly2, aver_train)
xx=np.linspace(1, 7, 7)
xx = xx.reshape(xx.shape[0], 1)
xx_poly2 = poly2.transform(xx)
yy_poly2 = regressor_poly2.predict(xx_poly2)
plt2, = plt.plot(xx, yy_poly2,"b-",label='train')
regressor_poly2.fit(x1_train_poly2, aver_text)
plt.figure(2)
yy_poly2 = regressor_poly2.predict(xx_poly2)
plt.scatter(x1,aver_text)
plt2, = plt.plot(xx, yy_poly2,"r-",label='text')
print(yy_poly2)
plt.scatter(x1,aver_text)
plt.title("Minimum average price prediction")
plt.legend(loc='upper left')
plt.show()
